#%NAME% 
#  Specific macros for Lima Maxipix detector 
#%CATEGORY% Detection, Ccd

#%LOG%
#
#$Revision: $
#

def limafrelonsetup(ccdname) '{

  # --- common control init
  _limapar_controlinit(ccdname, 0)

  # --- parameter definition
  _limapar_addconfig(ccdname, "espia_dev_nb", LP_READ, 1)

  # --- callback macro on parameter set
  #_limapar_addconfig_cb(ccdname, "_limafrelon_setpar")

  # --- parameter description
  _limapar_addtext(ccdname, "espia_dev_nb", "Espia board number")
}'

lima_addlimatype("Frelon", "limafrelonsetup", "limafrelonmenu")

def _limafrelon_setpar(ccdname, parname, value) '{
  _lima_trace ccdname; printf("CB on <%s>\n", parname)
  if (parname == "config_name") {
   #need to inform SPEC about possible image type change
   local unit
   unit  = LIMA_DEV[ccdname]["unit"]
   sleep(1)
   # need to call twice "resize" otherwise spec does update
   # the image_par() parameters (row_end,row_beg,col_end,col_beg) 
   image_par(unit, "resize")
   image_par(unit, "resize")
   ccd_createarray unit
  }

}'

def limafrelonmenu(ccdname) '{
  local items[] parname
  local nl option

  items["espia_dev_nb"]= -1

  option= 1

  while (option) {

    for (parname in items) {
      items[parname]= _limapar_get(ccdname, parname)
    }

    nl= _limamenu_printtitle(ccdname, "Configuration", "config")

    tty_move(0, nl++, "(1) Configuration :")
    _limamenu_printitem(ccdname, "espia_dev_nb", items["espia_dev_nb"], nl++, 11)
    nl++

    #tty_move(0, nl++, "(2) Calibration :")
    #_limamenu_printitem(ccdname, "threshold", items["threshold"], nl++, 21)
    nl++

    option= getval("\n\n\tOption ---> ", 0)
    printf("\n\n")
    option=0
  }
}'
#%MACROS%
#%IMACROS%
#%TOC%
#%AUTHOR% E.Papillon, $Revision: $, $Date: $
