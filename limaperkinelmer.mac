#%NAME% 
#  Specific macros for Lima PerkinElmer detector 
#%CATEGORY% Detection, Ccd

#%LOG%
#
#$Revision: $
#

def limaperkinelmersetup(ccdname) '{

  # --- common control init
  _limapar_controlinit(ccdname, 0)

  # --- parameter definition
  _limapar_addconfig(ccdname, "correction_mode",LP_RW|LP_LIST,1)

  # --- parameter description
  _limapar_addtext(ccdname, "correction_mode", "Correction")
}'

lima_addlimatype("PerkinElmer", "limaperkinelmersetup", "limaperkinelmermenu")


def limaperkinelmermenu(ccdname) '{
  local items[] parname
  local nl option

  items["correction_mode"] = "NO"
  option= 1

  while (option) {

    for (parname in items) {
      items[parname]= _limapar_get(ccdname, parname)
    }

    nl= _limamenu_printtitle(ccdname, "Configuration", "config")

    tty_move(0, nl++, "(1) Configuration :")
    _limamenu_printitem(ccdname, "correction_mode", items["correction_mode"], nl++,11)
    nl++

    option= getval("\n\n\tOption ---> ", 0)
    printf("\n\n")

    if((option==1) || (option==11))
      _limapar_ask(ccdname, "correction_mode",items["correction_mode"])
  }
}'
#%MACROS%
#%IMACROS%
#%TOC%
#%AUTHOR% E.Petitdemange, $Revision: $, $Date: $
